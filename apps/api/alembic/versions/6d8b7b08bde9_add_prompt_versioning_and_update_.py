"""Add prompt versioning and update pipeline models

Revision ID: 6d8b7b08bde9
Revises: 4f1716f37024
Create Date: 2025-08-06 15:20:32.626330

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6d8b7b08bde9'
down_revision: Union[str, None] = '4f1716f37024'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('knowledge_base_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('technique_id', sa.String(length=50), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('embedding', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_base_entries_id'), 'knowledge_base_entries', ['id'], unique=False)
    op.create_index(op.f('ix_knowledge_base_entries_source'), 'knowledge_base_entries', ['source'], unique=False)
    op.create_index(op.f('ix_knowledge_base_entries_technique_id'), 'knowledge_base_entries', ['technique_id'], unique=False)
    op.create_table('prompts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('template_text', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version', name='_name_version_uc')
    )
    op.create_index(op.f('ix_prompts_id'), 'prompts', ['id'], unique=False)
    op.create_index(op.f('ix_prompts_name'), 'prompts', ['name'], unique=False)
    op.add_column('pipeline_step_results', sa.Column('prompt_id', sa.Integer(), nullable=True))
    op.add_column('pipeline_step_results', sa.Column('embedding_model', sa.String(length=100), nullable=True))
    
    # Only create foreign key for PostgreSQL
    connection = op.get_bind()
    if connection.dialect.name == 'postgresql':
        op.create_foreign_key(None, 'pipeline_step_results', 'prompts', ['prompt_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Only drop foreign key for PostgreSQL
    connection = op.get_bind()
    if connection.dialect.name == 'postgresql':
        op.drop_constraint(None, 'pipeline_step_results', type_='foreignkey')
    op.drop_column('pipeline_step_results', 'embedding_model')
    op.drop_column('pipeline_step_results', 'prompt_id')
    op.drop_index(op.f('ix_prompts_name'), table_name='prompts')
    op.drop_index(op.f('ix_prompts_id'), table_name='prompts')
    op.drop_table('prompts')
    op.drop_index(op.f('ix_knowledge_base_entries_technique_id'), table_name='knowledge_base_entries')
    op.drop_index(op.f('ix_knowledge_base_entries_source'), table_name='knowledge_base_entries')
    op.drop_index(op.f('ix_knowledge_base_entries_id'), table_name='knowledge_base_entries')
    op.drop_table('knowledge_base_entries')
    # ### end Alembic commands ###
